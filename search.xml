<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>变步长自适应积分法</title>
      <link href="/posts/dc39.html"/>
      <url>/posts/dc39.html</url>
      
        <content type="html"><![CDATA[<p>变步长自适应积分法是一种数值积分方法，它可以自动调整积分步长以保证积分精度。该方法适用于求解无法通过解析方法求得积分的函数，例如高维函数或无法进行解析积分的函数。</p><p>变步长自适应积分法的基本思想是将积分区间分成若干个小区间，对每个小区间进行积分，然后将所有小区间的积分结果加起来作为整个积分的近似值。在计算每个小区间的积分时，采用不同的步长，并比较不同步长的积分结果，以确定最合适的步长。如果步长过大，积分精度会下降，需要缩小步长；如果步长过小，积分效率会下降，需要增大步长。通过不断地调整步长，可以得到足够精度的积分结果。</p><p>变步长自适应积分法的基本步骤如下：</p><p>1确定积分区间（a,b）和被积函数f(x).</p><p>2选择初始步长<img src="https://github.com/Collapsarylr/my-image/blob/main/clip_image002.jpg?raw=true" alt="img">,并用积分方法计算出初步结果<img src="https://github.com/Collapsarylr/my-image/blob/main/clip_image004.jpg?raw=true" alt="img">。</p><p>3选择一个误差限度<img src="https://github.com/Collapsarylr/my-image/blob/main/clip_image006.jpg?raw=true" alt="img">，并计算初步估计误差<img src="https://github.com/Collapsarylr/my-image/blob/main/clip_image008.jpg?raw=true" alt="img">。</p><p>4将积分区间分为若干小区间，对每一小区间进行积分，使用不同步长计算积分结果，直到达到精度要求或者步长达到一定的下限。对于每个步长<img src="https://github.com/Collapsarylr/my-image/blob/main/clip_image010.jpg?raw=true" alt="img">，用积分方法计算积分结果<img src="https://github.com/Collapsarylr/my-image/blob/main/clip_image012.jpg?raw=true" alt="img">和估计误差<img src="https://github.com/Collapsarylr/my-image/blob/main/clip_image014.jpg?raw=true" alt="img">。</p><p>5将所有小区间的积分结果加起来得到整个积分的近似值<img src="https://github.com/Collapsarylr/my-image/blob/main/clip_image016.jpg?raw=true" alt="img">。</p><p>6比较估计误差和预设误差限度<img src="https://github.com/Collapsarylr/my-image/blob/main/clip_image006.jpg?raw=true" alt="img">，如果<img src="https://github.com/Collapsarylr/my-image/blob/main/clip_image014.jpg?raw=true" alt="img">&lt;<img src="file:////Users/mac/Library/Group%20Containers/UBF8T346G9.Office/TemporaryItems/msohtmlclip/clip_image006.jpg" alt="img">，则认为积分精度已经足够，可以停止计算并输出积分结果<img src="https://github.com/Collapsarylr/my-image/blob/main/clip_image006.jpg?raw=true" alt="img">；否则，缩小步长并重新计算，即返回步骤 4。</p><p>例：</p><p>利用自适应simpson方法计算积分<img src="https://github.com/Collapsarylr/my-image/blob/main/clip_image002-1548055.jpg?raw=true" alt="img">,并将误差缩小至10^-4.</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%自适应simpson算法</span></span><br><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">close all;</span><br><span class="line">syms x</span><br><span class="line">f(x)=<span class="number">100</span>/(x^<span class="number">2</span>)*<span class="built_in">sin</span>(<span class="number">10</span>/x);<span class="comment">%目标函数</span></span><br><span class="line">a=<span class="number">1</span>;b=<span class="number">3</span>;<span class="comment">%初始区间</span></span><br><span class="line">TOL=<span class="number">1E-4</span>;<span class="comment">%误差容限</span></span><br><span class="line">[s,fcount]=acsimpson1(f,a,b,TOL);</span><br><span class="line"></span><br><span class="line">t = <span class="number">1</span>:<span class="number">0.001</span>:<span class="number">3</span>;</span><br><span class="line"><span class="built_in">plot</span>(t,f(t))</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&quot;自适应求积结果:&quot;</span>)</span><br><span class="line">result = vpa(s);</span><br><span class="line">fprintf(<span class="string">&quot;result= %f&quot;</span>,result);</span><br><span class="line"><span class="comment">% 画出f(x)图像</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[s,fcount]</span>=<span class="title">acsimpson1</span><span class="params">(f,a,b,tol)</span></span></span><br><span class="line"><span class="comment">%此方法为自适应simpson方法求解定积分</span></span><br><span class="line"><span class="comment">%f为函数，a，b分别为积分区间，tol为精度</span></span><br><span class="line"><span class="comment">%s为积分值，fcount为计算函数值次数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%一下为准备输入数据</span></span><br><span class="line">f = fcnchk(f,<span class="string">&#x27;vectorized&#x27;</span>);       <span class="comment">%定义内联函数</span></span><br><span class="line">h=b-a;             <span class="comment">%步长</span></span><br><span class="line">qu=[a a+h/<span class="number">2</span> b];    <span class="comment">%三个节点</span></span><br><span class="line"><span class="comment">% qu(qu==0)=2^-1024; %避免计算函数值出现NAN的情况</span></span><br><span class="line">y=feval(f,qu);     <span class="comment">%计算函数节点处的值</span></span><br><span class="line">s=y*[<span class="number">1</span> <span class="number">4</span> <span class="number">1</span>]&#x27;*h/<span class="number">6</span>;  <span class="comment">%Simpson积分</span></span><br><span class="line">fcount=<span class="number">0</span>;          <span class="comment">%定义初始计数器</span></span><br><span class="line">tol=tol*<span class="number">10</span>;        <span class="comment">%调整精度</span></span><br><span class="line"></span><br><span class="line">[s,fcount]=subsim(f,s,qu,y,fcount,tol); <span class="comment">%递归函数</span></span><br><span class="line">fcount=fcount+<span class="number">3</span>;   <span class="comment">%计数器加上准备输入数据的三次计算</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%以下为递归函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[s,fcount]</span>=<span class="title">subsim</span><span class="params">(f,s,qu,y,fcount,tol)</span></span></span><br><span class="line"><span class="comment">%以下为对qu二分，分别对两个小区间求出Simpson积分</span></span><br><span class="line">h=(qu(<span class="keyword">end</span>)-qu(<span class="number">1</span>))/<span class="number">2</span>;</span><br><span class="line">quadd=[qu(<span class="number">1</span>)+h/<span class="number">2</span> qu(<span class="number">2</span>)+h/<span class="number">2</span>];</span><br><span class="line">quadd(quadd==<span class="number">0</span>)=<span class="number">2</span>^<span class="number">-1024</span>; <span class="comment">%避免计算函数值出现NAN的情况</span></span><br><span class="line">yadd=feval(f,quadd);</span><br><span class="line"><span class="built_in">scatter</span>(quadd,yadd,<span class="string">&quot;o&quot;</span>)</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line">subs=[y(<span class="number">1</span>) yadd(<span class="number">1</span>) y(<span class="number">2</span>) yadd(<span class="number">2</span>) y(<span class="number">3</span>)].*[<span class="number">1</span> <span class="number">4</span> <span class="number">1</span> <span class="number">4</span> <span class="number">1</span>]*h/<span class="number">6</span>;</span><br><span class="line">s1=sum(subs(<span class="number">1</span>:<span class="number">3</span>));    <span class="comment">%左半区间</span></span><br><span class="line">s2=sum(subs(<span class="number">3</span>:<span class="keyword">end</span>));  <span class="comment">%右半区间</span></span><br><span class="line">stemp=s1+s2;</span><br><span class="line">fcount=fcount+<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">%每次递归一次，函数值运算次数增加2次</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">abs</span>(stemp-s)&lt;tol</span><br><span class="line">    s=s1+s2; <span class="comment">%若满足精度，采用一次Romberg积分,返回函数值</span></span><br><span class="line"><span class="keyword">else</span>                      <span class="comment">%若不满足，则继续二分</span></span><br><span class="line">    tol=tol/<span class="number">2</span>;</span><br><span class="line">    [s1,fcount]=subsim(f,s1,[qu(<span class="number">1</span>) qu(<span class="number">1</span>)+h/<span class="number">2</span> qu(<span class="number">2</span>)],[y(<span class="number">1</span>) yadd(<span class="number">1</span>) y(<span class="number">2</span>)],fcount,tol);</span><br><span class="line">    [s2,fcount]=subsim(f,s2,[qu(<span class="number">2</span>) qu(<span class="number">2</span>)+h/<span class="number">2</span> qu(<span class="keyword">end</span>)],[y(<span class="number">2</span>) yadd(<span class="number">2</span>) y(<span class="number">3</span>)],fcount,tol);</span><br><span class="line">    s=s1+s2;              <span class="comment">%将每个小区间的Romberg积分值相加            </span></span><br><span class="line">    <span class="comment">%fcount=fcount1+fcount2;   %将每个小区间的计数器相加</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ChatGPT注册教程</title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、什么是ChatGPT"><a href="#一、什么是ChatGPT" class="headerlink" title="一、什么是ChatGPT"></a>一、什么是ChatGPT</h3><p>ChatGPT，美国<a href="https://baike.baidu.com/item/OpenAI/19758408?fromModule=lemma_inlink">OpenAI</a> 研发的<a href="https://baike.baidu.com/item/%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA/1052902?fromModule=lemma_inlink">聊天机器人</a>程序  ，于2022年11月30日发布。ChatGPT是<a href="https://baike.baidu.com/item/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/9180?fromModule=lemma_inlink">人工智能</a>技术驱动的<a href="https://baike.baidu.com/item/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86/365730?fromModule=lemma_inlink">自然语言处理</a>工具，它能够通过学习和理解人类的语言来进行对话，还能根据聊天的<a href="https://baike.baidu.com/item/%E4%B8%8A%E4%B8%8B%E6%96%87/2884376?fromModule=lemma_inlink">上下文</a>进行互动，真正像人类一样来聊天交流，甚至能完成撰写<a href="https://baike.baidu.com/item/%E9%82%AE%E4%BB%B6/3110293?fromModule=lemma_inlink">邮件</a>、视频<a href="https://baike.baidu.com/item/%E8%84%9A%E6%9C%AC/399?fromModule=lemma_inlink">脚本</a>、<a href="https://baike.baidu.com/item/%E6%96%87%E6%A1%88/92610?fromModule=lemma_inlink">文案</a>、<a href="https://baike.baidu.com/item/%E7%BF%BB%E8%AF%91/32864?fromModule=lemma_inlink">翻译</a>、<a href="https://baike.baidu.com/item/%E4%BB%A3%E7%A0%81/86048?fromModule=lemma_inlink">代码</a>，写<a href="https://baike.baidu.com/item/%E8%AE%BA%E6%96%87/149478?fromModule=lemma_inlink">论文</a> 等任务。</p><h4 id="二、创建账号，你需要什么"><a href="#二、创建账号，你需要什么" class="headerlink" title="二、创建账号，你需要什么"></a>二、创建账号，你需要什么</h4><p>（一）、一个邮箱，尽量不使用QQ邮箱，类似于Google邮箱，outlook，163邮箱都可以。</p><p>（二）、懂得科学上网，如果你不知道如何科学上网，可以私信我</p><h4 id="三、创建ChatGPT账号"><a href="#三、创建ChatGPT账号" class="headerlink" title="三、创建ChatGPT账号"></a>三、创建ChatGPT账号</h4><p>挂上VPN，开启全局模式。不要用香港或者俄罗斯的节点，选择美日韩的节点亲测有效。</p><p>进入ChatGPT官方网页，地址：<a href="https://openai.com/">https://openai.com</a></p><p><img src="https://github.com/Collapsarylr/my-image/blob/main/1.png?raw=true"></p><p>点击TRY ChatGPT按钮</p><p><img src="https://github.com/Collapsarylr/my-image/blob/main/2.png?raw=true"></p><p>Sign up之后，界面如下：</p><p><img src="https://github.com/Collapsarylr/my-image/blob/main/3.png?raw=true"></p><p>一步步进行下去，它会让你在邮箱进行验证：</p><p><img src="https://github.com/Collapsarylr/my-image/blob/main/4.png?raw=true"></p><p>之后它会让你进行电话验证，你可以进入这个网站获得一个国外的电话号码：<a href="https://sms-activate.org/%EF%BC%8C%E6%B3%A8%E6%84%8F%EF%BC%9A%E8%BF%99%E4%B8%AA%E5%8F%B7%E7%A0%81%E6%9C%80%E5%A5%BD%E4%B8%8E%E4%BD%A0%E7%9A%84%E8%8A%82%E7%82%B9%E9%80%89%E6%8B%A9%E7%9B%B8%E5%90%8C%EF%BC%8C%E6%AF%94%E5%A6%82%E4%BD%A0%E6%98%AF%E7%BE%8E%E5%9B%BD%E8%8A%82%E7%82%B9%EF%BC%8C%E5%B0%B1%E9%80%89%E6%8B%A9%E7%BE%8E%E5%9B%BD%E5%8F%B7%E7%A0%81%E3%80%82">https://sms-activate.org/，注意：这个号码最好与你的节点选择相同，比如你是美国节点，就选择美国号码。</a></p><p><img src="https://github.com/Collapsarylr/my-image/blob/main/5.png?raw=true"></p><p>然后就完成了，界面如下：<br><img src="https://github.com/Collapsarylr/my-image/blob/main/6.png?raw=true"></p><h4 id="四、注意"><a href="#四、注意" class="headerlink" title="四、注意"></a>四、注意</h4><p>人工智能或许会方便于我们的生活，或许它最终也会取代一些职业，但是如果你打算从事诸如科研之类的工作，一定不要对它产生依赖，不然终是害了自己。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>日常记录一</title>
      <link href="/posts/undefined.html"/>
      <url>/posts/undefined.html</url>
      
        <content type="html"><![CDATA[<p>你好！这是我第一篇博客，今后我会在我的博客里分享我的学习成果与生活动态！</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
